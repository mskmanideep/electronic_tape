#define F_CPU 1000000ul
#include<avr/io.h>
#include<util/delay.h>
#include<avr/eeprom.h>
void lcd_cmd(int c)
{
	PORTB=(c&0XF0)|0X04;
	_delay_ms(1);
	PORTB=PORTB-0X04;
	PORTB=((c<<4)&0XF0)|0X04;
	_delay_ms(1);
	PORTB=PORTB-0X04;
}
void lcd_data(int d)
{
	PORTB=(d&0XF0)|0X05;
	_delay_ms(1);
	PORTB=PORTB-0X04;
	PORTB=((d<<4)&0XF0)|0X05;
	_delay_ms(1);
	PORTB=PORTB-0X04;
}
void lcd_init()
{
	lcd_cmd(0X02);
	lcd_cmd(0X28);
	lcd_cmd(0X0C);
	lcd_cmd(0X06);
}
void lcd_num(int n)
{
	int a=0;
	lcd_cmd(0X04);
	if(n==0)
	{
		lcd_data(48);
	}
	else
	{
		while(n!=0)
		{
			a=n%10;
			lcd_data(a+48);
			n=n/10;
		}
	}
	lcd_cmd(0X06);
}
void lcd_str(char *str)
{
	int i=0;
	while(str[i]!='\0')
	{
		lcd_data(str[i]);
		i++;
	}
}
void lcd_clear()
{
	lcd_cmd(0X01);
	_delay_ms(5);
}
int keypad()
{
	while(1)
	{
        PORTD=0b00001110;
		_delay_ms(10);
		     if(PINA==0b00001110)
				 { 
			 while(PINA==0b00001110);
			 return 1; 
			 }
		else if(PINA==0b00001101)
			{
				while(PINA==0b00001101);
		return 4; 
		}
		else if(PINA==0b00001011) 
		{
			while(PINA==0b00001011);
	return 7;
	}
		else if(PINA==0b00000111)
			{
				while(PINA==0b00000111);
		return 11; 
		}
		PORTD=0b00001101;
		_delay_ms(10);
		     if(PINA==0b00001110)
				 { 
			 while(PINA==0b00001110);
			 return 2;
			 }
		else if(PINA==0b00001101)
			{ 
		while(PINA==0b00001101);
		return 5;
		}
		else if(PINA==0b00001011) 
		{
			while(PINA==0b00001011);
	return 8;
	}
		else if(PINA==0b00000111) 
		{
			while(PINA==0b00000111);
	return 0;
	}
		PORTD=0b00001011;
		_delay_ms(10);
			 if(PINA==0b00001110)
				 {
					 while(PINA==0b00001110);
					 return 3;
					 }
		else if(PINA==0b00001101)
			{
				while(PINA==0b00001101);
				return 6;
				}
		else if(PINA==0b00001011) 
		{
			while(PINA==0b00001011);
	return 9;
	}
		else if(PINA==0b00000111)
			{ 
		while(PINA==0b00000111);
		return 12; 
		}			
		PORTD=0b00000111;
		_delay_ms(10);
		     if(PINA==0b00001110) 
			 { 
		 while(PINA==0b00001110);
		 return 13;
		 }
		else if(PINA==0b00001101) 
		{ 
	while(PINA==0b00001101);
	return 14;
	}
		else if(PINA==0b00001011) 
		{ 
	while(PINA==0b00001011);
	return 15;
	}
		else if(PINA==0b00000111)
			{ 
		while(PINA==0b00000111);
		return 16; 
		}
	}
}
void main()
{
	 int A=0,B=0,C=0,D=0,Z=0,A1=0,B1=0,C1=0,D1=0,Z1=0,a=0,a1=0,b=0,b1=0,c=0,c1=0,d=0,d1=0,z=0,z1=0;
	 int n1,n0,A2=0,B2=0,C2=0,D2=0,Z2=0;
	 DDRA =0X00;
	 DDRB=0XFF;
	 DDRC=0XFF;
	 DDRD=0XFF;
	 PORTA=0X0F;
	 _delay_ms(5);
	 lcd_init();
	 _delay_ms(5);
	 PORTC=0XFF;
	 PORTD=0X10;
	 lcd_clear();
	 lcd_cmd(0X80);
	 _delay_ms(5);
	 lcd_str(" WELCOME NITRR  ");
	 _delay_ms(5);
	 lcd_cmd(0XC0);
	 _delay_ms(5);
	 lcd_str(" POLYTRiX 2K17  ");
	 _delay_ms(5);
	 _delay_ms(2000);
	 lcd_clear();
	 PORTD=0X00;
	 PORTC=0X00;
	 _delay_ms(10);
	 a=eeprom_read_byte(0x010);
	 a1=eeprom_read_byte(0x011);
	 b=eeprom_read_byte(0x020);
	 b1=eeprom_read_byte(0x021);
	 c=eeprom_read_byte(0x030);
     c1=eeprom_read_byte(0x031);
	 d=eeprom_read_byte(0x040);
	 d1=eeprom_read_byte(0x041);
	 z=eeprom_read_byte(0x050);
	 z1=eeprom_read_byte(0x051);	 
	 A = (a1*100)+a;
	 B = (b1*100)+b;
	 C = (c1*100)+c;
	 D = (d1*100)+d;
	 Z = (z1*100)+z;
	 z=eeprom_read_byte(0x150);
	 z1=eeprom_read_byte(0x151);
	 Z2 = (z1*100)+z;
	 while(1)
	 {
		 a=eeprom_read_byte(0x010);
		 a1=eeprom_read_byte(0x011);
		 b=eeprom_read_byte(0x020);
		 b1=eeprom_read_byte(0x021);
		 c=eeprom_read_byte(0x030);
         c1=eeprom_read_byte(0x031);
		d=eeprom_read_byte(0x040);
		d1=eeprom_read_byte(0x041);
		z=eeprom_read_byte(0x050);
		z1=eeprom_read_byte(0x051);	 
		A = (a1*100)+a;
		B = (b1*100)+b;
		C = (c1*100)+c;
		D = (d1*100)+d;
		Z = (z1*100)+z;
		z=eeprom_read_byte(0x150);
		z1=eeprom_read_byte(0x151);
		Z2 = (z1*100)+z;
		lcd_clear();lcd_cmd(0X80);
		_delay_ms(5);
		lcd_str("POLYTRiX        ");
		_delay_ms(5);
		lcd_cmd(0x8F);
		_delay_ms(5);
		lcd_num(Z1);
		_delay_ms(5);
		lcd_cmd(0xC0);
		_delay_ms(5);
		lcd_str(" PRESS ANY KEY  ");
		_delay_ms(5);
		 int k=0;
		 k=keypad();
		 if(k>=13)
		 {
			 Z=Z+1;
	 Z1=Z1+1;
	 Z2=Z2+1;
	 lcd_clear();
	 lcd_cmd(0X80);
	 _delay_ms(5);
	 lcd_str("POLYTRiX        ");
	 _delay_ms(5);
	 lcd_cmd(0x8F);
	 _delay_ms(5);
		lcd_num(Z1);
		_delay_ms(5);
		lcd_cmd(0xC0);
		_delay_ms(5);
		lcd_str("   THANK YOU    ");
		_delay_ms(5);
		n1=Z/100;
		n0=Z%100;
		eeprom_write_byte(0x050,n0);
		eeprom_write_byte(0x051,n1);
			 n1=Z2/100;
			 n0=Z2%100;
			 eeprom_write_byte(0x150,n0);
			 eeprom_write_byte(0x151,n1);
			      if (k==13)
			 {A=A+1;
		 A1=A1+1;
		 A2=A2+1;
		 PORTC=0X01;
		 _delay_ms(100);
		 PORTC=0X00;
		 n1=A/100;
		 n0=A%100;
		 eeprom_write_byte(0x010,n0);
		 eeprom_write_byte(0x011,n1);
			n1=A2/100;
			n0=A2%100;
			eeprom_write_byte(0x110,n0);
			eeprom_write_byte(0x111,n1);
			 }
			 else if (k==14)
			 {
				 B=B+1;
				 B1=B1+1;
				 B2=B2+1; 
				 PORTC=0X02;
				 _delay_ms(100);
				 PORTC=0X00;
				 n1=B/100;
				 n0=B%100;
				 eeprom_write_byte(0x020,n0);
				 eeprom_write_byte(0x021,n1);
			n1=B2/100;
			n0=B2%100; 
			eeprom_write_byte(0x120,n0);
			eeprom_write_byte(0x121,n1);
			}
			 else if (k==15)
			 {
				 C=C+1;
				 C1=C1+1;
				 C2=C2+1;
				 PORTD=0X10;
				 _delay_ms(100);
				 PORTD=0X00;
				 n1=C/100;
				 n0=C%100;
				 eeprom_write_byte(0x030,n0);
				 eeprom_write_byte(0x031,n1);
			 n1=C2/100;
			 n0=C2%100;
			 eeprom_write_byte(0x130,n0);
			 eeprom_write_byte(0x131,n1);
			 }
			 else if (k==16)
             {
				 D=D+1;
				 D1=D1+1;
				 D2=D2+1; 
				 PORTC=0X40;
				 _delay_ms(100);
				 PORTC=0X00;
				 n1=D/100;
				 n0=D%100;
				 eeprom_write_byte(0x040,n0);
				 eeprom_write_byte(0x041,n1);
			 n1=D2/100;
			 n0=D2%100;
			 eeprom_write_byte(0x140,n0);
			 eeprom_write_byte(0x141,n1);
			 }
			 _delay_ms(2500);
          }
		  if(k==11)
		  {
			  lcd_clear();
			  lcd_cmd(0x80);
			  _delay_ms(5);
			  lcd_str(" ENTER PASS KEY ");
			  _delay_ms(5);
			  int Q=0,P=0;
			  while(Q!=12)
			  {
				  Q=keypad();
				  PORTC=0X80;
				  _delay_ms(50);
				  PORTC=0X00;
				  if(Q==12)
				  {
					  break;
				  }
				  else if(Q<11)
				  {
					  P=(P*10)+Q;
					  lcd_cmd(0XC6);
					  _delay_ms(5);
					  lcd_num(P);
					  _delay_ms(10);
				  }
			  }
			  if(P==1234)
			  {
				  lcd_clear();
				  lcd_cmd(0x80);
				  lcd_str("A=");
				  _delay_ms(5);
				  lcd_cmd(0x86);
				  _delay_ms(5);
				  lcd_num(A1);
				  lcd_cmd(0x88);
				  lcd_str("B=");
				  _delay_ms(5);
				  lcd_cmd(0x8F);
				  _delay_ms(5);
				  lcd_num(B1);
				  lcd_cmd(0xC0);
				  lcd_str("C=");
				  _delay_ms(5);
				  lcd_cmd(0xC6);
				  _delay_ms(5);
				  lcd_num(C1);
				  lcd_cmd(0xC8);
				  lcd_str("D=");
				  _delay_ms(5);
				  lcd_cmd(0xCF);
				  _delay_ms(5);
				  lcd_num(D1);
				 for(int h=0;h<=50;h++)
				 {
					 PORTC=0x80;
					 _delay_ms(50);
					 PORTC=0x00;
					 _delay_ms(50);
					 }
			  }		  
			  if(P==4568)
			  {
				  eeprom_write_byte(0x010,00);
				  eeprom_write_byte(0x011,00);
				  eeprom_write_byte(0x020,00);
				  eeprom_write_byte(0x021,00);
				  eeprom_write_byte(0x030,00);
				  eeprom_write_byte(0x031,00);
				  eeprom_write_byte(0x040,00);
				  eeprom_write_byte(0x041,00);
				  eeprom_write_byte(0x050,00);
				  eeprom_write_byte(0x051,00);
				  lcd_clear();
				  lcd_cmd(0x80);
				  _delay_ms(5);
				  lcd_str(" ERASE SUCCESS  ");
				  PORTC=0x80;
				  _delay_ms(50);
				  _delay_ms(1000);
				  PORTC=0x00;
				  lcd_clear();			  
			  }
			  if(P==9875)
			  {
				  lcd_clear();
				  lcd_cmd(0x80);
				  lcd_str("A=");
				  _delay_ms(5);
				  lcd_cmd(0x86);
				  _delay_ms(5);
				  lcd_num(A);
				  lcd_cmd(0x88);
				  lcd_str("B=");
				  _delay_ms(5);
				  lcd_cmd(0x8F);
				  _delay_ms(5);
				  lcd_num(B);
				  lcd_cmd(0xC0);
				  lcd_str("C=");
				  _delay_ms(5);
				  lcd_cmd(0xC6);
				  _delay_ms(5);
				  lcd_num(C);
				  lcd_cmd(0xC8);
				  lcd_str("D=");
				  _delay_ms(5);
				  lcd_cmd(0xCF);
				  _delay_ms(5);
				  lcd_num(D);
				  for(int h=0;h<=10;h++)
				  {
					  PORTC=0x80;
					  _delay_ms(250);
					  PORTC=0x00;
					  _delay_ms(250);
					  }
				  lcd_clear();
				  lcd_cmd(0x80);
				  _delay_ms(5);
				  lcd_str("  TOTAL VOTES   ");
				  _delay_ms(5);
				  lcd_cmd(0xC8);
				  _delay_ms(5);
				  lcd_num(Z);
				  for(int h=0;h<=8;h++)
				  {
					  PORTC=0x80;
					  _delay_ms(250);
					  PORTC=0x00;
					  _delay_ms(250);
					  }
			  }
			  if (P==9999)
			  {   
		  lcd_clear();
		  lcd_cmd(0x80);
		  _delay_ms(5);
		  lcd_str("ENTER RESET KEY ");
		  _delay_ms(5);
				int Q0=0,P0=0,l=0;
				while(Q0!=12)
				{
					Q0=keypad();
					l=l+1; 
					if(Q0==12)
					{
						break;
					}
					else if(Q0<11)
					{
						P0=(P0*10)+Q0;
						lcd_cmd(0XC6+l);
						_delay_ms(5);
						lcd_str("*");
						_delay_ms(10);
					}
				}
				if (P0==1947)
				{
					eeprom_write_byte(0x110,00);
					eeprom_write_byte(0x111,00);
					eeprom_write_byte(0x120,00);
					eeprom_write_byte(0x121,00);
					eeprom_write_byte(0x130,00);
					eeprom_write_byte(0x131,00);
					eeprom_write_byte(0x140,00);
					eeprom_write_byte(0x141,00);
					eeprom_write_byte(0x150,00);
					eeprom_write_byte(0x151,00);
					lcd_clear();
					lcd_cmd(0x80);
					_delay_ms(5);
					lcd_str(" RESET SUCCESS  ");
					_delay_ms(1000);
					lcd_clear();
				}  
			  }
			  if(P==7777)
			  {
                lcd_clear();
				lcd_cmd(0x80);
				_delay_ms(5);
				lcd_str("ENTER RESET KEY ");
				_delay_ms(5);
				int Q0=0,P0=0,l=0;
				while(Q0!=12)
				{
					Q0=keypad();
					l=l+1; 
					if(Q0==12)
					{
						break;
					}
					else if(Q0<11)
					{
						P0=(P0*10)+Q0;
						lcd_cmd(0XC6+l);
						_delay_ms(5);
						lcd_str("*");
						_delay_ms(10);
					}
				}
				if (P0==1942)
				{        
				  int Y0,A0,B0,C0,D0,Z0,Y1;
				  Y0=eeprom_read_byte(0x110);
				  Y1=eeprom_read_byte(0x111);
				  A0=(Y1*100)+Y0;
				  Y0=eeprom_read_byte(0x120);
				  Y1=eeprom_read_byte(0x121);
				  B0=(Y1*100)+Y0;
				  Y0=eeprom_read_byte(0x130);
				  Y1=eeprom_read_byte(0x131);
				  C0=(Y1*100)+Y0;
				  Y0=eeprom_read_byte(0x140);
				  Y1=eeprom_read_byte(0x141);
				  D0=(Y1*100)+Y0;
				  Y0=eeprom_read_byte(0x150);
				  Y1=eeprom_read_byte(0x151);
				  Z0=(Y1*100)+Y0;
				  lcd_clear();
				  lcd_cmd(0x80);
				  lcd_str("A=");
				  _delay_ms(5);
				  lcd_cmd(0x86);
				  _delay_ms(5);
				  lcd_num(A0);
				  lcd_cmd(0x88);
				  lcd_str("B=");
				  _delay_ms(5);
				  lcd_cmd(0x8F);
				  _delay_ms(5);
				  lcd_num(B0);
				  lcd_cmd(0xC0);
				  lcd_str("C=");
				  _delay_ms(5);
				  lcd_cmd(0xC6);
				  _delay_ms(5);
				  lcd_num(C0);
				  lcd_cmd(0xC8);
				  lcd_str("D=");
				  _delay_ms(5);
				  lcd_cmd(0xCF);
				  _delay_ms(5);
				  lcd_num(D0);
				  _delay_ms(5000);
				  lcd_clear();
				  lcd_cmd(0x80);
				  _delay_ms(5);
				  lcd_str("  TOTAL VOTES   ");
				  _delay_ms(5);
				  lcd_cmd(0xC8);
				  _delay_ms(5);
				  lcd_num(Z0);
				  _delay_ms(3000);
                }
			  }
		  }
	 }
}